DocTest for 2-matrix_divided
Function: matrix_divided
    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

# Example 1: Basic matrix division
>>> matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
>>> matrix_divided(matrix, 2)
[[0.5, 1.0, 1.5], [2.0, 2.5, 3.0], [3.5, 4.0, 4.5]]

# Example 2: Matrix division with a negative divisor
>>> matrix = [[-1, -2, -3], [4, 5, 6], [-7, -8, -9]]
>>> matrix_divided(matrix, -3)
[[0.33, 0.67, 1.0], [-1.33, -1.67, -2.0], [2.33, 2.67, 3.0]]

# Example 3: Matrix division with a float divisor
>>> matrix = [[10, 20, 30], [40, 50, 60], [70, 80, 90]]
>>> matrix_divided(matrix, 1.5)
[[6.67, 13.33, 20.0], [26.67, 33.33, 40.0], [46.67, 53.33, 60.0]]

# Example 4: Matrix division with zero divisor
>>> matrix = [[1, 2], [3, 4]]
>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
    ...
ZeroDivisionError: division by zero

# Example 5: Matrix with empty rows
>>> matrix = [[1, 2, 3], [], [4, 5, 6]]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size

# Example 6: Non-numeric elements in the matrix
>>> matrix = [[1, 2, 3], [4, '5', 6], [7, 8, 9]]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# Example 7: Matrix with invalid format (not a list of lists)
>>> matrix = [1, 2, 3]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

Example 8: Matrix with invalid format (string passed in)
>>> matrix_divided([["a", 2, 3], ["b", 4, 5]], 6)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# Example 9: Matrix division with divisor as a string
>>> matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
>>> matrix_divided(matrix, "2")
Traceback (most recent call last):
    ...
TypeError: div must be a number

# Example 10: Matrix division with divisor as positive infinity
>>> matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
>>> matrix_divided(matrix, float('inf'))
[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

# Example 11: Missing one argument
>>> matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
>>> matrix_divided(matrix)
Traceback (most recent call last):
    ...
TypeError: matrix_divided() missing 1 required positional argument: 'div'

>>> # Example 12: Missing two arguments
>>> matrix_divided()
Traceback (most recent call last):
    ...
TypeError: matrix_divided() missing 2 required positional argument: 'matrix', 'div'

Testing a functioning input with all integers
    >>> matrix_divided([[2, 4, 6], [8, 10, 12]], 2)
    [[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]]

Testing that output is rounded to two decimal places
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Testing a functioning input with mix of integers and floats
    >>> matrix_divided([[5, 7.5], [10, 8.25]], 5)
    [[1.0, 1.5], [2.0, 1.65]]

Testing when string is passed in a matrix
>>> matrix_divided([["a", 2, 3], ["b", 4, 5]], 6)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

Testing that each row of the matrix is the same length
    >>> matrix_divided([[1, 2, 3], [4, 5], [7, 8, 9]], 1)
    Traceback (most recent call last):
        ... 
    TypeError: Each row of the matrix must have the same size

Testing that divisor is an integer or float
    >>> matrix_divided([[3, 6, 9], [12, 15, 18]], "c")
    Traceback (most recent call last):
        ...
    TypeError: div must be a number

Testing that divisor is not zero
    >>> matrix_divided([[10, 20],[30, 40]], 0)
    Traceback (most recent call last):
        ...
    ZeroDivisionError: division by zero

Testing if no divisor is passed
    >>> matrix_divided([[1, 2, 3],[4, 5, 6]])
    Traceback (most recent call last):
        ...
    TypeError: matrix_divided() missing 1 required positional argument: 'div'
    
Testing if no matrix is passed
    >>> matrix_divided(, 4)
    Traceback (most recent call last):
        ...
    SyntaxError: invalid syntax

Testing if None is passed as matrix
    >>> matrix_divided(None, 1)
    Traceback (most recent call last):
        ...
    TypeError: 'NoneType' object is not subscriptable
